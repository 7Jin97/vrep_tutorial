-- This script is threaded! It is a very simple example of how Ackermann steering can be handled.
-- Normally, one would use a non-threaded script for that

threadFunction=function()
	while simGetSimulationState()~=sim_simulation_advancing_abouttostop do
		-- Read the keyboard messages (make sure the focus is on the main window, scene view):
		message,auxiliaryData=simGetSimulatorMessage()
		while message~=-1 do
			if (message==sim_message_keypress) then
				if (auxiliaryData[1]==2007) then
					-- up key
					desiredWheelRotSpeed=desiredWheelRotSpeed+wheelRotSpeedDx
				end
				if (auxiliaryData[1]==2008) then
					-- down key
					desiredWheelRotSpeed=desiredWheelRotSpeed-wheelRotSpeedDx
				end
				if (auxiliaryData[1]==2009) then
					-- left key
					desiredSteeringAngle=desiredSteeringAngle+steeringAngleDx
					if (desiredSteeringAngle>45*math.pi/180) then
						desiredSteeringAngle=45*math.pi/180
					end
				end
				if (auxiliaryData[1]==2010) then
					-- right key
					desiredSteeringAngle=desiredSteeringAngle-steeringAngleDx
					if (desiredSteeringAngle<-45*math.pi/180) then
						desiredSteeringAngle=-45*math.pi/180
					end
				end
			end
			message,auxiliaryData=simGetSimulatorMessage()
		end

		-- We handle the front left and right wheel steerings (Ackermann steering):
		steeringAngleLeft=math.atan(l/(-d+l/math.tan(desiredSteeringAngle)))
		steeringAngleRight=math.atan(l/(d+l/math.tan(desiredSteeringAngle)))
		simSetJointTargetPosition(steeringLeft,steeringAngleLeft)
		simSetJointTargetPosition(steeringRight,steeringAngleRight)

		-- We take care of setting the desired wheel rotation speed:
		simSetJointTargetVelocity(motorLeft,desiredWheelRotSpeed)
		simSetJointTargetVelocity(motorRight,desiredWheelRotSpeed)

		-- Since this script is threaded, don't waste time here:
		simSwitchThread() -- Resume the script at next simulation loop start
	end
end

-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
steeringLeft=simGetObjectHandle('Steer_left_joint')
steeringRight=simGetObjectHandle('Steer_right_joint')
motorLeft=simGetObjectHandle('Front_left_joint')
motorRight=simGetObjectHandle('Front_right_joint')
desiredSteeringAngle=0
desiredWheelRotSpeed=0
steeringAngleDx=2*math.pi/180
wheelRotSpeedDx=20*math.pi/180
d=0.755 -- 2*d=distance between left and right wheels
l=2.5772 -- l=distance between front and read wheels

-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
	simAddStatusbarMessage('Lua runtime error: '..err)
end

-- Put some clean-up code here:


